<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.zameer.work" />
	<context:property-placeholder location="classpath:application.properties"/>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="${mysql.driverClassName}" />
        <beans:property name="url" value="${mysql.url}" />
        <beans:property name="username" value="${mysql.username}" /> 
       	<beans:property name="password" value="${mysql.password}" />
    </beans:bean>
    
     <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
               		 <beans:value>com.zameer.work.bean.User</beans:value>
              		 <beans:value>com.zameer.work.bean.Role</beans:value>
                     <beans:value>com.zameer.work.bean.ProductMaster</beans:value>
                     
                       <!-- For Configuration -->
                       <beans:value>com.zameer.work.util.Configuration</beans:value>
                     
                
                
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
    
    <beans:bean id="mapper" class="org.dozer.DozerBeanMapper" scope="singleton"/>
	<beans:bean id="dozerMapper" class="com.zameer.work.util.DozerMapper" scope="singleton"/>
	<beans:bean id="uploadUtility" class="com.zameer.work.util.UploadUtility" scope="singleton"/>
	<beans:bean id="uploadUtilityService" class="com.zameer.work.service.impl.UploadUtilityServiceImpl">	</beans:bean>
	<beans:bean id="uploadUtilityDao" class="com.zameer.work.dao.impl.UploadUtilityDaoImpl">	</beans:bean>
   
	
	 <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    
    <beans:bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
	
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
</beans:beans>
